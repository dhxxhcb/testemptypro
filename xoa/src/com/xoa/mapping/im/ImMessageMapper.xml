<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.im.ImMessageMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.im.ImMessage" >
    <id column="IMID" property="imid" jdbcType="INTEGER" />
    <result column="FROM_UID" property="fromUid" jdbcType="VARCHAR" />
    <result column="TO_UID" property="toUid" jdbcType="VARCHAR" />
    <result column="OF_FROM" property="ofFrom" jdbcType="VARCHAR" />
    <result column="OF_TO" property="ofTo" jdbcType="VARCHAR" />
    <result column="THUMBNAIL_URL" property="thumbnailUrl" jdbcType="VARCHAR" />
    <result column="STIME" property="stime" jdbcType="VARCHAR" />
    <result column="ATIME" property="atime" jdbcType="INTEGER" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="DFLAG" property="dflag" jdbcType="CHAR" />
    <result column="MSG_TYPE" property="msgType" jdbcType="VARCHAR" />
    <result column="UUID" property="uuid" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xoa.model.im.ImMessageWithBLOBs" extends="BaseResultMap" >
    <result column="CONTENT" property="content" jdbcType="LONGVARCHAR" />
    <result column="FILE_ID" property="fileId" jdbcType="LONGVARCHAR" />
    <result column="FILE_NAME" property="fileName" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    IMID, FROM_UID, TO_UID, OF_FROM, OF_TO, THUMBNAIL_URL, STIME, ATIME, TYPE, DFLAG, 
    MSG_TYPE, UUID
  </sql>
  <sql id="Blob_Column_List" >
    CONTENT, FILE_ID, FILE_NAME
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xoa.model.im.ImMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from im_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoa.model.im.ImMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from im_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from im_message
    where IMID = #{imid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from im_message
    where IMID = #{imid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoa.model.im.ImMessageExample" >
    delete from im_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoa.model.im.ImMessageWithBLOBs" >
    insert into im_message (IMID, FROM_UID, TO_UID, 
      OF_FROM, OF_TO, THUMBNAIL_URL, 
      STIME, ATIME, TYPE, 
      DFLAG, MSG_TYPE, UUID, 
      CONTENT, FILE_ID, FILE_NAME
      )
    values (#{imid,jdbcType=INTEGER}, #{fromUid,jdbcType=VARCHAR}, #{toUid,jdbcType=VARCHAR}, 
      #{ofFrom,jdbcType=VARCHAR}, #{ofTo,jdbcType=VARCHAR}, #{thumbnailUrl,jdbcType=VARCHAR}, 
      #{stime,jdbcType=VARCHAR}, #{atime,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{dflag,jdbcType=CHAR}, #{msgType,jdbcType=VARCHAR}, #{uuid,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR}, #{fileId,jdbcType=LONGVARCHAR}, #{fileName,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.im.ImMessageWithBLOBs" >
    insert into im_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="imid != null" >
        IMID,
      </if>
      <if test="fromUid != null" >
        FROM_UID,
      </if>
      <if test="toUid != null" >
        TO_UID,
      </if>
      <if test="ofFrom != null" >
        OF_FROM,
      </if>
      <if test="ofTo != null" >
        OF_TO,
      </if>
      <if test="thumbnailUrl != null" >
        THUMBNAIL_URL,
      </if>
      <if test="stime != null" >
        STIME,
      </if>
      <if test="atime != null" >
        ATIME,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="dflag != null" >
        DFLAG,
      </if>
      <if test="msgType != null" >
        MSG_TYPE,
      </if>
      <if test="uuid != null" >
        UUID,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
      <if test="fileId != null" >
        FILE_ID,
      </if>
      <if test="fileName != null" >
        FILE_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="imid != null" >
        #{imid,jdbcType=INTEGER},
      </if>
      <if test="fromUid != null" >
        #{fromUid,jdbcType=VARCHAR},
      </if>
      <if test="toUid != null" >
        #{toUid,jdbcType=VARCHAR},
      </if>
      <if test="ofFrom != null" >
        #{ofFrom,jdbcType=VARCHAR},
      </if>
      <if test="ofTo != null" >
        #{ofTo,jdbcType=VARCHAR},
      </if>
      <if test="thumbnailUrl != null" >
        #{thumbnailUrl,jdbcType=VARCHAR},
      </if>
      <if test="stime != null" >
        #{stime,jdbcType=VARCHAR},
      </if>
      <if test="atime != null" >
        #{atime,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="dflag != null" >
        #{dflag,jdbcType=CHAR},
      </if>
      <if test="msgType != null" >
        #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=LONGVARCHAR},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoa.model.im.ImMessageExample" resultType="java.lang.Integer" >
    select count(*) from im_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update im_message
    <set >
      <if test="record.imid != null" >
        IMID = #{record.imid,jdbcType=INTEGER},
      </if>
      <if test="record.fromUid != null" >
        FROM_UID = #{record.fromUid,jdbcType=VARCHAR},
      </if>
      <if test="record.toUid != null" >
        TO_UID = #{record.toUid,jdbcType=VARCHAR},
      </if>
      <if test="record.ofFrom != null" >
        OF_FROM = #{record.ofFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.ofTo != null" >
        OF_TO = #{record.ofTo,jdbcType=VARCHAR},
      </if>
      <if test="record.thumbnailUrl != null" >
        THUMBNAIL_URL = #{record.thumbnailUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.stime != null" >
        STIME = #{record.stime,jdbcType=VARCHAR},
      </if>
      <if test="record.atime != null" >
        ATIME = #{record.atime,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.dflag != null" >
        DFLAG = #{record.dflag,jdbcType=CHAR},
      </if>
      <if test="record.msgType != null" >
        MSG_TYPE = #{record.msgType,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null" >
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.fileId != null" >
        FILE_ID = #{record.fileId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.fileName != null" >
        FILE_NAME = #{record.fileName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update im_message
    set IMID = #{record.imid,jdbcType=INTEGER},
      FROM_UID = #{record.fromUid,jdbcType=VARCHAR},
      TO_UID = #{record.toUid,jdbcType=VARCHAR},
      OF_FROM = #{record.ofFrom,jdbcType=VARCHAR},
      OF_TO = #{record.ofTo,jdbcType=VARCHAR},
      THUMBNAIL_URL = #{record.thumbnailUrl,jdbcType=VARCHAR},
      STIME = #{record.stime,jdbcType=VARCHAR},
      ATIME = #{record.atime,jdbcType=INTEGER},
      TYPE = #{record.type,jdbcType=VARCHAR},
      DFLAG = #{record.dflag,jdbcType=CHAR},
      MSG_TYPE = #{record.msgType,jdbcType=VARCHAR},
      UUID = #{record.uuid,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      FILE_ID = #{record.fileId,jdbcType=LONGVARCHAR},
      FILE_NAME = #{record.fileName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update im_message
    set IMID = #{record.imid,jdbcType=INTEGER},
      FROM_UID = #{record.fromUid,jdbcType=VARCHAR},
      TO_UID = #{record.toUid,jdbcType=VARCHAR},
      OF_FROM = #{record.ofFrom,jdbcType=VARCHAR},
      OF_TO = #{record.ofTo,jdbcType=VARCHAR},
      THUMBNAIL_URL = #{record.thumbnailUrl,jdbcType=VARCHAR},
      STIME = #{record.stime,jdbcType=VARCHAR},
      ATIME = #{record.atime,jdbcType=INTEGER},
      TYPE = #{record.type,jdbcType=VARCHAR},
      DFLAG = #{record.dflag,jdbcType=CHAR},
      MSG_TYPE = #{record.msgType,jdbcType=VARCHAR},
      UUID = #{record.uuid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.im.ImMessageWithBLOBs" >
    update im_message
    <set >
      <if test="fromUid != null" >
        FROM_UID = #{fromUid,jdbcType=VARCHAR},
      </if>
      <if test="toUid != null" >
        TO_UID = #{toUid,jdbcType=VARCHAR},
      </if>
      <if test="ofFrom != null" >
        OF_FROM = #{ofFrom,jdbcType=VARCHAR},
      </if>
      <if test="ofTo != null" >
        OF_TO = #{ofTo,jdbcType=VARCHAR},
      </if>
      <if test="thumbnailUrl != null" >
        THUMBNAIL_URL = #{thumbnailUrl,jdbcType=VARCHAR},
      </if>
      <if test="stime != null" >
        STIME = #{stime,jdbcType=VARCHAR},
      </if>
      <if test="atime != null" >
        ATIME = #{atime,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="dflag != null" >
        DFLAG = #{dflag,jdbcType=CHAR},
      </if>
      <if test="msgType != null" >
        MSG_TYPE = #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null" >
        UUID = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="fileId != null" >
        FILE_ID = #{fileId,jdbcType=LONGVARCHAR},
      </if>
      <if test="fileName != null" >
        FILE_NAME = #{fileName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where IMID = #{imid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xoa.model.im.ImMessageWithBLOBs" >
    update im_message
    set FROM_UID = #{fromUid,jdbcType=VARCHAR},
      TO_UID = #{toUid,jdbcType=VARCHAR},
      OF_FROM = #{ofFrom,jdbcType=VARCHAR},
      OF_TO = #{ofTo,jdbcType=VARCHAR},
      THUMBNAIL_URL = #{thumbnailUrl,jdbcType=VARCHAR},
      STIME = #{stime,jdbcType=VARCHAR},
      ATIME = #{atime,jdbcType=INTEGER},
      TYPE = #{type,jdbcType=VARCHAR},
      DFLAG = #{dflag,jdbcType=CHAR},
      MSG_TYPE = #{msgType,jdbcType=VARCHAR},
      UUID = #{uuid,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=LONGVARCHAR},
      FILE_ID = #{fileId,jdbcType=LONGVARCHAR},
      FILE_NAME = #{fileName,jdbcType=LONGVARCHAR}
    where IMID = #{imid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoa.model.im.ImMessage" >
    update im_message
    set FROM_UID = #{fromUid,jdbcType=VARCHAR},
      TO_UID = #{toUid,jdbcType=VARCHAR},
      OF_FROM = #{ofFrom,jdbcType=VARCHAR},
      OF_TO = #{ofTo,jdbcType=VARCHAR},
      THUMBNAIL_URL = #{thumbnailUrl,jdbcType=VARCHAR},
      STIME = #{stime,jdbcType=VARCHAR},
      ATIME = #{atime,jdbcType=INTEGER},
      TYPE = #{type,jdbcType=VARCHAR},
      DFLAG = #{dflag,jdbcType=CHAR},
      MSG_TYPE = #{msgType,jdbcType=VARCHAR},
      UUID = #{uuid,jdbcType=VARCHAR}
    where IMID = #{imid,jdbcType=INTEGER}
  </update>
</mapper>