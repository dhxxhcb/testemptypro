<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dao.users.UserPrivMapper">
    <resultMap id="BaseResultMap" type="com.xoa.model.users.UserPriv">
        <id column="USER_PRIV" jdbcType="INTEGER" property="userPriv"/>
        <result column="PRIV_NAME" jdbcType="VARCHAR" property="privName"/>
        <result column="PRIV_NO" jdbcType="SMALLINT" property="privNo"/>
        <result column="FUNC_ID_STR" jdbcType="VARCHAR" property="funcIdStr"/>
        <result column="PRIV_DEPT_ID" jdbcType="INTEGER" property="privDeptId"/>
        <result column="PRIV_TYPE" jdbcType="TINYINT" property="privType"/>
        <result column="IS_GLOBAL" jdbcType="TINYINT" property="isGlobal"/>
    </resultMap>
    <sql id="Base_Column_List">
    USER_PRIV, PRIV_NAME, PRIV_NO, FUNC_ID_STR, PRIV_DEPT_ID, PRIV_TYPE, IS_GLOBAL
  </sql>

    <select id="getAlluserPriv" resultMap="BaseResultMap" parameterType="map">
        select USER_PRIV, PRIV_NAME, PRIV_NO, FUNC_ID_STR, PRIV_DEPT_ID, PRIV_TYPE, IS_GLOBAL
        from user_priv
        where 1=1
        <if test="userPriv != null">
            and USER_PRIV=#{userPriv},
        </if>
        <if test="privName != null">
            and PRIV_NAME=#{privName},
        </if>
        <if test="privNo != null">
            and PRIV_NO=#{privNo},
        </if>
        <if test="funcIdStr != null">
            and FUNC_ID_STR=#{funcIdStr},
        </if>
        <if test="privDeptId != null">
            and PRIV_DEPT_ID=#{privDeptId},
        </if>
        <if test="privType != null">
            and PRIV_TYPE=#{privType},
        </if>
        <if test="isGlobal != null">
            and IS_GLOBAL=#{isGlobal}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_priv
        where USER_PRIV = #{userPriv,jdbcType=INTEGER}
    </select>
    <select id="getPrivNameById" parameterType="java.lang.Integer" resultType="java.lang.String">
    select PRIV_NAME from user_priv
    where USER_PRIV = #{userPriv,jdbcType=INTEGER}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_priv
    where USER_PRIV = #{userPriv,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.xoa.model.users.UserPriv">
    insert into user_priv (USER_PRIV, PRIV_NAME, PRIV_NO, 
      FUNC_ID_STR, PRIV_DEPT_ID, PRIV_TYPE, 
      IS_GLOBAL)
    values (#{userPriv,jdbcType=INTEGER}, #{privName,jdbcType=VARCHAR}, #{privNo,jdbcType=SMALLINT}, 
      #{funcIdStr,jdbcType=VARCHAR}, #{privDeptId,jdbcType=INTEGER}, #{privType,jdbcType=TINYINT}, 
      #{isGlobal,jdbcType=TINYINT})
  </insert>
    <insert id="insertSelective" parameterType="com.xoa.model.users.UserPriv">
        insert into user_priv
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userPriv != null">
                USER_PRIV,
            </if>
            <if test="privName != null">
                PRIV_NAME,
            </if>
            <if test="privNo != null">
                PRIV_NO,
            </if>
            <if test="funcIdStr != null">
                FUNC_ID_STR,
            </if>
            <if test="privDeptId != null">
                PRIV_DEPT_ID,
            </if>
            <if test="privType != null">
                PRIV_TYPE,
            </if>
            <if test="isGlobal != null">
                IS_GLOBAL,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userPriv != null">
                #{userPriv,jdbcType=INTEGER},
            </if>
            <if test="privName != null">
                #{privName,jdbcType=VARCHAR},
            </if>
            <if test="privNo != null">
                #{privNo,jdbcType=SMALLINT},
            </if>
            <if test="funcIdStr != null">
                #{funcIdStr,jdbcType=VARCHAR},
            </if>
            <if test="privDeptId != null">
                #{privDeptId,jdbcType=INTEGER},
            </if>
            <if test="privType != null">
                #{privType,jdbcType=TINYINT},
            </if>
            <if test="isGlobal != null">
                #{isGlobal,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xoa.model.users.UserPriv">
        UPDATE
        user_priv
        <set>
            <if test="privName != null">
                PRIV_NAME = #{privName,jdbcType=VARCHAR},
            </if>
            <if test="privNo != null">
                PRIV_NO = #{privNo,jdbcType=SMALLINT},
            </if>
            <if test="funcIdStr != null">
                FUNC_ID_STR = #{funcIdStr,jdbcType=VARCHAR},
            </if>
            <if test="privDeptId != null">
                PRIV_DEPT_ID = #{privDeptId,jdbcType=INTEGER},
            </if>
            <if test="privType != null">
                PRIV_TYPE = #{privType,jdbcType=TINYINT},
            </if>
            <if test="isGlobal != null">
                IS_GLOBAL = #{isGlobal,jdbcType=TINYINT},
            </if>
        </set>
        where USER_PRIV = #{userPriv,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xoa.model.users.UserPriv">
    update user_priv
    set PRIV_NAME = #{privName,jdbcType=VARCHAR},
      PRIV_NO = #{privNo,jdbcType=SMALLINT},
      FUNC_ID_STR = #{funcIdStr,jdbcType=VARCHAR},
      PRIV_DEPT_ID = #{privDeptId,jdbcType=INTEGER},
      PRIV_TYPE = #{privType,jdbcType=TINYINT},
      IS_GLOBAL = #{isGlobal,jdbcType=TINYINT}
    where USER_PRIV = #{userPriv,jdbcType=INTEGER}
  </update>

    <select id="getUserPrivNameByFuncId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select u.PRIV_NAME  from  user_priv u WHERE u.FUNC_ID_STR LIKE concat('%,', #{fid}, ',%');
    </select>

    <select id="getUserPrivfuncIdStr" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT u.FUNC_ID_STR  FROM  user_priv  u WHERE u.USER_PRIV = #{id};
    </select>

    <select id="updateUserPrivFuncIdStr" parameterType="hashMap">
        UPDATE user_priv  u set  u.FUNC_ID_STR = #{funcIdStr} WHERE u.USER_PRIV = #{id}
    </select>


</mapper>