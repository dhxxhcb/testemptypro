<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xoa.dao.schedule.CalendarMapper">
  <resultMap id="BaseResultMap" type="com.xoa.model.schedule.Calendar">
    <result column="CAL_ID" jdbcType="INTEGER" property="calId" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="CAL_TIME" jdbcType="INTEGER" property="calTime" />
    <result column="END_TIME" jdbcType="INTEGER" property="endTime" />
    <result column="CAL_TYPE" jdbcType="CHAR" property="calType" />
    <result column="CAL_LEVEL" jdbcType="CHAR" property="calLevel" />
    <result column="MANAGER_ID" jdbcType="VARCHAR" property="managerId" />
    <result column="OVER_STATUS" jdbcType="VARCHAR" property="overStatus" />
    <result column="BEFORE_REMAIND" jdbcType="VARCHAR" property="beforeRemaind" />
    <result column="ADD_TIME" jdbcType="TIMESTAMP" property="addTime" />
    <result column="ALLDAY" jdbcType="TINYINT" property="allday" />
    <result column="FROM_MODULE" jdbcType="TINYINT" property="fromModule" />
    <result column="URL" jdbcType="VARCHAR" property="url" />
    <result column="M_ID" jdbcType="INTEGER" property="mId" />
    <result column="res_id" jdbcType="INTEGER" property="resId" />
    <result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
    <result column="OWNER" jdbcType="LONGVARCHAR" property="owner" />
    <result column="TAKER" jdbcType="LONGVARCHAR" property="taker" />
  </resultMap>
  <sql id="Blob_Column_List">
    CONTENT, OWNER, TAKER
  </sql>
  <select id="getschedule" parameterType="Map" resultMap="BaseResultMap">
  select CAL_ID,CAL_LEVEL,CAL_TIME,END_TIME,CONTENT from calendar where 
  CAL_TIME&gt;=#{calTime} and CAL_TIME&lt;=#{endTime} 
  || END_TIME&gt;=#{calTime} and END_TIME&lt;=#{endTime}
  </select>
  
   <select id="getscheduleByDate" parameterType="Map" resultMap="BaseResultMap">
  select CAL_ID,USER_ID,CAL_LEVEL,CAL_TIME,END_TIME,CONTENT from calendar where 
  CAL_TIME&lt;=#{calTime} and END_TIME&gt;=#{calTime} 
  </select> 
   <select id="getscheduleBycId" parameterType="Map" resultMap="BaseResultMap">
  select CAL_ID,CAL_LEVEL,CAL_TIME,END_TIME,CONTENT,TAKER from calendar where USER_ID=#{userId} and
  CAL_TIME&lt;=#{calTime} and END_TIME&gt;=#{calTime} 
  </select>
  <insert id="insert" parameterType="com.xoa.model.schedule.Calendar">
    insert into calendar (CAL_ID, USER_ID, CAL_TIME, 
      END_TIME, CAL_TYPE, CAL_LEVEL, 
      MANAGER_ID, OVER_STATUS, BEFORE_REMAIND, 
      ADD_TIME, ALLDAY, FROM_MODULE, 
      URL, M_ID, res_id, CONTENT, 
      OWNER, TAKER)
    values (#{calId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{calTime,jdbcType=INTEGER}, 
      #{endTime,jdbcType=INTEGER}, #{calType,jdbcType=CHAR}, #{calLevel,jdbcType=CHAR}, 
      #{managerId,jdbcType=VARCHAR}, #{overStatus,jdbcType=VARCHAR}, #{beforeRemaind,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=TIMESTAMP}, #{allday,jdbcType=TINYINT}, #{fromModule,jdbcType=TINYINT}, 
      #{url,jdbcType=VARCHAR}, #{mId,jdbcType=INTEGER}, #{resId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}, 
      #{owner,jdbcType=LONGVARCHAR}, #{taker,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.schedule.Calendar">
    insert into calendar
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="calId != null">
        CAL_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="calTime != null">
        CAL_TIME,
      </if>
      <if test="endTime != null">
        END_TIME,
      </if>
      <if test="calType != null">
        CAL_TYPE,
      </if>
      <if test="calLevel != null">
        CAL_LEVEL,
      </if>
      <if test="managerId != null">
        MANAGER_ID,
      </if>
      <if test="overStatus != null">
        OVER_STATUS,
      </if>
      <if test="beforeRemaind != null">
        BEFORE_REMAIND,
      </if>
      <if test="addTime != null">
        ADD_TIME,
      </if>
      <if test="allday != null">
        ALLDAY,
      </if>
      <if test="fromModule != null">
        FROM_MODULE,
      </if>
      <if test="url != null">
        URL,
      </if>
      <if test="mId != null">
        M_ID,
      </if>
      <if test="resId != null">
        res_id,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
      <if test="owner != null">
        OWNER,
      </if>
      <if test="taker != null">
        TAKER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="calId != null">
        #{calId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="calTime != null">
        #{calTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=INTEGER},
      </if>
      <if test="calType != null">
        #{calType,jdbcType=CHAR},
      </if>
      <if test="calLevel != null">
        #{calLevel,jdbcType=CHAR},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="overStatus != null">
        #{overStatus,jdbcType=VARCHAR},
      </if>
      <if test="beforeRemaind != null">
        #{beforeRemaind,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allday != null">
        #{allday,jdbcType=TINYINT},
      </if>
      <if test="fromModule != null">
        #{fromModule,jdbcType=TINYINT},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="mId != null">
        #{mId,jdbcType=INTEGER},
      </if>
      <if test="resId != null">
        #{resId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=LONGVARCHAR},
      </if>
      <if test="taker != null">
        #{taker,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>