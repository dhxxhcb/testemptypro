<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoa.dao.EmailMapper" >
  <resultMap id="BaseResultMap" type="com.xoa.model.Email" >
    <result column="EMAIL_ID" property="emailId" jdbcType="INTEGER" />
    <result column="TO_ID" property="toId" jdbcType="VARCHAR" />
    <result column="READ_FLAG" property="readFlag" jdbcType="CHAR" />
    <result column="DELETE_FLAG" property="deleteFlag" jdbcType="CHAR" />
    <result column="BOX_ID" property="boxId" jdbcType="INTEGER" />
    <result column="BODY_ID" property="bodyId" jdbcType="INTEGER" />
    <result column="RECEIPT" property="receipt" jdbcType="CHAR" />
    <result column="IS_F" property="isF" jdbcType="CHAR" />
    <result column="IS_R" property="isR" jdbcType="CHAR" />
    <result column="SIGN" property="sign" jdbcType="CHAR" />
  </resultMap>
  <insert id="insert" parameterType="com.xoa.model.Email" >
    insert into email (EMAIL_ID, TO_ID, READ_FLAG, 
      DELETE_FLAG, BOX_ID, BODY_ID, 
      RECEIPT, IS_F, IS_R, SIGN
      )
    values (#{emailId,jdbcType=INTEGER}, #{toId,jdbcType=VARCHAR}, #{readFlag,jdbcType=CHAR}, 
      #{deleteFlag,jdbcType=CHAR}, #{boxId,jdbcType=INTEGER}, #{bodyId,jdbcType=INTEGER}, 
      #{receipt,jdbcType=CHAR}, #{isF,jdbcType=CHAR}, #{isR,jdbcType=CHAR}, #{sign,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoa.model.Email" >
    insert into email
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="emailId != null" >
        EMAIL_ID,
      </if>
      <if test="toId != null" >
        TO_ID,
      </if>
      <if test="readFlag != null" >
        READ_FLAG,
      </if>
      <if test="deleteFlag != null" >
        DELETE_FLAG,
      </if>
      <if test="boxId != null" >
        BOX_ID,
      </if>
      <if test="bodyId != null" >
        BODY_ID,
      </if>
      <if test="receipt != null" >
        RECEIPT,
      </if>
      <if test="isF != null" >
        IS_F,
      </if>
      <if test="isR != null" >
        IS_R,
      </if>
      <if test="sign != null" >
        SIGN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="emailId != null" >
        #{emailId,jdbcType=INTEGER},
      </if>
      <if test="toId != null" >
        #{toId,jdbcType=VARCHAR},
      </if>
      <if test="readFlag != null" >
        #{readFlag,jdbcType=CHAR},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="boxId != null" >
        #{boxId,jdbcType=INTEGER},
      </if>
      <if test="bodyId != null" >
        #{bodyId,jdbcType=INTEGER},
      </if>
      <if test="receipt != null" >
        #{receipt,jdbcType=CHAR},
      </if>
      <if test="isF != null" >
        #{isF,jdbcType=CHAR},
      </if>
      <if test="isR != null" >
        #{isR,jdbcType=CHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
</mapper>