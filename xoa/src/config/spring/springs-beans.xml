<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
       default-autowire="byName" default-lazy-init="true">

    <!-- 设定Spring 去哪些包中找Annotation -->
    <context:component-scan base-package="cn.trt.*"/>

    <context:property-placeholder location="classpath:jdbc-sql.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driverClassName}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${uname}"/>
        <property name="password" value="${password}"/>
        <!--连接池中保留的最大连接数。默认值: 15 -->
        <property name="maxPoolSize" value="${maxPoolSize}"/>
        <!-- 连接池中保留的最小连接数，默认为：3 -->
        <property name="minPoolSize" value="${minPoolSize}"/>
        <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 -->
        <property name="initialPoolSize" value="${initialPoolSize}"/>

        <!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
        <property name="maxIdleTime" value="${maxIdleTime}"/>

        <!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认:
            0 -->
        <property name="checkoutTimeout" value="${checkoutTimeout}"/>

        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
        <property name="acquireIncrement" value="${acquireIncrement}"/>

        <!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次 -->
        <property name="acquireRetryAttempts" value="${acquireRetryAttempts}"/>

        <!--重新尝试的时间间隔，默认为：1000毫秒 -->
        <property name="acquireRetryDelay" value="${acquireRetryDelay}"/>

        <!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->
        <property name="autoCommitOnClose" value="${autoCommitOnClose}"/>
    </bean>
    <!-- 导入Src目录下的jdbc.properties文件 -->
    <!--创建Spring的SessionFactory工厂 -->
    <!-- 如果使用的是Annotation的方式，必须使用LocalSessionFactoryBean,不能使用 AnnotationSessionFactoryBean -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <!-- <value> hibernate.dialect=org.hibernate.dialect.HSQLDialect </value> -->
            <props>
                <!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
                <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        <!-- 自动扫描制定位置下的实体进行映射 -->
        <property name="packagesToScan" value="cn.trt.*.model"/>
    </bean>
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>