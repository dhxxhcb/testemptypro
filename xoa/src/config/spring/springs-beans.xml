<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="true">

    <!--设置包扫描路径，注册之后，对应包下的比如@Controller等注解会被注册为bean-->
	<context:component-scan base-package="com.xoa.*" />

    <!--指定（数据库）配置参数文件位置-->
	<context:property-placeholder location="classpath:jdbc-sql.properties" />

    <!--配置数据源-->
    <!--dmDburl=jdbc:dm://192.168.0.24:5236/xoa-->
    <!--dmDbusername=SYSDBA-->
    <!--dmDbpassword=gaosubo3000-->
	<!-- mysql -->
	<bean id="xoa1001" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
		destroy-method="close">
		<property name="driverClass" value="${driverClassName}" />
		<property name="jdbcUrl" value="${url1001}" />
		<property name="user" value="${uname1001}" />
		<property name="password" value="${password1001}" />
		<!--&lt;!&ndash;连接池中保留的最大连接数。默认值: 15 &ndash;&gt;-->
		<!--<property name="maxPoolSize" value="${maxPoolSize}" />-->
		<!--&lt;!&ndash; 连接池中保留的最小连接数，默认为：3 &ndash;&gt;-->
		<!--<property name="minPoolSize" value="${minPoolSize}" />-->
		<!--&lt;!&ndash; 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 &ndash;&gt;-->
		<!--<property name="initialPoolSize" value="${initialPoolSize}" />-->
		<!--&lt;!&ndash;最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 &ndash;&gt;-->
		<!--<property name="maxIdleTime" value="${maxIdleTime}" />-->
		<!--&lt;!&ndash; 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: -->
			<!--0 &ndash;&gt;-->
		<!--<property name="checkoutTimeout" value="${checkoutTimeout}" />-->
		<!--&lt;!&ndash;当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 &ndash;&gt;-->
		<!--<property name="acquireIncrement" value="${acquireIncrement}" />-->
		<!--&lt;!&ndash;定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次 &ndash;&gt;-->
		<!--<property name="acquireRetryAttempts" value="${acquireRetryAttempts}" />-->
		<!--&lt;!&ndash;重新尝试的时间间隔，默认为：1000毫秒 &ndash;&gt;-->
		<!--<property name="acquireRetryDelay" value="${acquireRetryDelay}" />-->
		<!--&lt;!&ndash;关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 &ndash;&gt;-->
		<!--<property name="autoCommitOnClose" value="${autoCommitOnClose}" />-->
        <!--<property name="maxStatements" value="${max_statements}" />-->
	</bean>
    <!-- mysql -->
    <bean id="xoa1002" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${driverClassName}" />
        <property name="jdbcUrl" value="${url1002}" />
        <property name="user" value="${uname1002}" />
        <property name="password" value="${password1002}" />
        <property name="maxPoolSize" value="${maxPoolSize}" />
        <property name="minPoolSize" value="${minPoolSize}" />
        <property name="initialPoolSize" value="${initialPoolSize}" />
        <property name="maxIdleTime" value="${maxIdleTime}" />
        <property name="checkoutTimeout" value="${checkoutTimeout}" />
        <property name="acquireIncrement" value="${acquireIncrement}" />
        <property name="acquireRetryAttempts" value="${acquireRetryAttempts}" />
        <property name="acquireRetryDelay" value="${acquireRetryDelay}" />
        <property name="autoCommitOnClose" value="${autoCommitOnClose}" />
        <property name="maxStatements" value="${max_statements}" />
    </bean>
    
      <bean id="xoa1003" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${driverClassName}" />
        <property name="jdbcUrl" value="${url1003}" />
        <property name="user" value="${uname1003}" />
        <property name="password" value="${password1003}" />
        <property name="maxPoolSize" value="${maxPoolSize}" />
        <property name="minPoolSize" value="${minPoolSize}" />
        <property name="initialPoolSize" value="${initialPoolSize}" />
        <property name="maxIdleTime" value="${maxIdleTime}" />
        <property name="checkoutTimeout" value="${checkoutTimeout}" />
        <property name="acquireIncrement" value="${acquireIncrement}" />
        <property name="acquireRetryAttempts" value="${acquireRetryAttempts}" />
        <property name="acquireRetryDelay" value="${acquireRetryDelay}" />
        <property name="autoCommitOnClose" value="${autoCommitOnClose}" />
          <property name="maxStatements" value="${max_statements}" />
    </bean>

<bean id="xoa1004" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${driverClassName}" />
        <property name="jdbcUrl" value="${url1004}" />
        <property name="user" value="${uname1004}" />
        <property name="password" value="${password1004}" />
        <property name="maxPoolSize" value="${maxPoolSize}" />
        <property name="minPoolSize" value="${minPoolSize}" />
        <property name="initialPoolSize" value="${initialPoolSize}" />
        <property name="maxIdleTime" value="${maxIdleTime}" />
        <property name="checkoutTimeout" value="${checkoutTimeout}" />
        <property name="acquireIncrement" value="${acquireIncrement}" />
        <property name="acquireRetryAttempts" value="${acquireRetryAttempts}" />
        <property name="acquireRetryDelay" value="${acquireRetryDelay}" />
        <property name="autoCommitOnClose" value="${autoCommitOnClose}" />
    <property name="maxStatements" value="${max_statements}" />
    </bean>
    
    <bean id="xoa1005" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${driverClassName}" />
        <property name="jdbcUrl" value="${url1005}" />
        <property name="user" value="${uname1005}" />
        <property name="password" value="${password1005}" />
        <property name="maxPoolSize" value="${maxPoolSize}" />
        <property name="minPoolSize" value="${minPoolSize}" />
        <property name="initialPoolSize" value="${initialPoolSize}" />
        <property name="maxIdleTime" value="${maxIdleTime}" />
        <property name="checkoutTimeout" value="${checkoutTimeout}" />
        <property name="acquireIncrement" value="${acquireIncrement}" />
        <property name="acquireRetryAttempts" value="${acquireRetryAttempts}" />
        <property name="acquireRetryDelay" value="${acquireRetryDelay}" />
        <property name="autoCommitOnClose" value="${autoCommitOnClose}" />
        <property name="maxStatements" value="${max_statements}" />
    </bean>

    <!-- oracle -->
    <!--<bean id="oracleDataSources" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
        <property name="driverClass" value="${oracle.driverClassName}" />
        <property name="jdbcUrl" value="${oracle.url}" />
        <property name="user" value="${oracle.uname}" />
        <property name="password" value="${oracle.password}" />
        <property name="maxPoolSize" value="${maxPoolSize}" />
        <property name="minPoolSize" value="${minPoolSize}" />
        <property name="initialPoolSize" value="${initialPoolSize}" />
        <property name="maxIdleTime" value="${maxIdleTime}" />
        <property name="checkoutTimeout" value="${checkoutTimeout}" />
        <property name="acquireIncrement" value="${acquireIncrement}" />
        <property name="acquireRetryAttempts" value="${acquireRetryAttempts}" />
        <property name="acquireRetryDelay" value="${acquireRetryDelay}" />
        <property name="autoCommitOnClose" value="${autoCommitOnClose}" />
    </bean>-->

    <!--多数据源-->
    <!--<bean id="dynDatasources" class="com.xoa.util.dataSource.DynDatasources">-->
    <bean id="dynDatasources" class="com.xoa.util.dataSource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="xoa1001" value-ref="xoa1001" />
                <entry key="xoa1002" value-ref="xoa1002"/>
                <entry key="xoa1003" value-ref="xoa1003"/>
                <entry key="xoa1004" value-ref="xoa1004"/>
                <entry key="xoa1005" value-ref="xoa1005"/>
                <!--<entry key="oracleDataSources" value-ref="oracleDataSources" />-->
            </map>
        </property>
        <!-- 默认为mysql，默认数据库 -->
        <property name="defaultTargetDataSource" ref="xoa1001" />
    </bean>
    <bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="SQLServer">sqlserver</prop>
                <prop key="DB2">db2</prop>
                <prop key="Oracle">oracle</prop>
                <prop key="MySQL">mysql</prop>
                <prop key="DM">dm</prop>
            </props>
        </property>
    </bean>

    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <property name="properties" ref="vendorProperties"/>
    </bean>
		<!-- 配置sql会话工厂：SqlSessionFactoryBean -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynDatasources" />
        <property name="databaseIdProvider" ref="databaseIdProvider" />
		<property name="mapperLocations" value="classpath:com/xoa/mapping/*/*.xml" />
		<property name="configLocation" value="classpath:config/spring/mybatis-config.xml" /> 
	</bean>

   <!-- 通过aop命名空间的<aop:aspectj-autoproxy />声明自动为spring容器中那些配置@aspectJ切面的bean创建代理，织入切面。
    默认为false，表示使用jdk动态代理织入增强，当配为<aop:aspectj-autoproxy  poxy-target-class="true"/>时，表示使用CGLib动态代理技术织入增强。
    @aspectJ 切面注解，写在public class上面。  是AOP的一个属性，AOP可以实现不动源码的情况切入一个新的方法.-->
	 <!--<bean id="myInspectDatasource" class="com.xoa.util.dataSource.MyInspectDatasource" />-->
	<aop:aspectj-autoproxy />

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xoa.dao.*" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean" />
	</bean>

    <!--事务管理器-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynDatasources" />
	</bean>
    <!--注解式事务管理-->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>